# 1. Update changelog
# 2. Upload a Python Package using Twine

name: Release fosslight_scanner

on:
  release:
    types: [published]

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run Tox
      run: |
        tox -e release
  update-changelog:
    needs: build_ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get Release
      uses: agners/get-draft-release@v1.2.2
      id: get_release
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Bump up version
      env:
        NEW_TAG: ${{ steps.get_release.outputs.tag_name }}
      run: |
        pip install --upgrade bumpversion
        LAST_TWO_TAGS=$(git for-each-ref refs/tags/ --count=2 --sort=-v:refname --format="%(refname:short)")
        LAST_ONE=$(echo $LAST_TWO_TAGS | cut -d' ' -f 2)
        last_version=$(echo ${LAST_ONE//v/""})
        echo Last version: ${last_version}
        new_version=$(echo ${NEW_TAG//v/""})
        echo New version: ${new_version}
        git config --local user.name "github-actions[bot]"
        bumpversion --current-version $last_version --new-version $new_version setup.py
    - name: update changelog with gren
      env:
        GREN_GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        npm install github-release-notes@0.17.3
        node_modules/.bin/gren changelog --override
    - name: Commit files
      run: |
        git config --local user.name "github-actions[bot]"
        git add CHANGELOG.md
        git commit -m "Update ChangeLog"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.TOKEN }}
        branch: main

  deploy:
    runs-on: ubuntu-latest
    needs: update-changelog
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip freeze > requirements.txt
        python -m pip install --upgrade build twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        python -m twine upload dist/*
