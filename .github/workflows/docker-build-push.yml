name: Docker Build and Push

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          fosslight/fosslight_scanner:latest
          fosslight/fosslight_scanner:${{ github.event.release.tag_name }}

  create-windows-executable:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install pyinstaller
    - name: Create executable
      run: pyinstaller --onefile fosslight_wrapper.py
    - name: Upload executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/fosslight_wrapper.exe
        asset_name: fosslight_wrapper.exe
        asset_content_type: application/vnd.microsoft.portable-executable

  create-macos-command-file:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create .command file
      run: |
        chmod +x fosslight_wrapper_mac.command
    - name: Upload .command file to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./fosslight_wrapper_mac.command
        asset_name: fosslight_wrapper_mac.command
        asset_content_type: application/x-sh

  create-ubuntu-executables:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install pyinstaller
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Build with PyInstaller
      run: |
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          docker run --rm -v $PWD:/work -w /work multiarch/ubuntu-core:arm64-focal /bin/bash -c "apt-get update && apt-get install -y python3-pip && pip3 install pyinstaller && pyinstaller --onefile fosslight_wrapper_ubuntu.py"
        else
          pyinstaller --onefile fosslight_wrapper_ubuntu.py
        fi
    - name: Upload executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/fosslight_wrapper_ubuntu
        asset_name: fosslight_wrapper_ubuntu-${{ matrix.arch }}
        asset_content_type: application/octet-stream